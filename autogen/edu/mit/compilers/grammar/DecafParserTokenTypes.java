// $ANTLR 2.7.7 (2006-11-01): "parser.g" -> "DecafParser.java"$

package edu.mit.compilers.grammar;

public interface DecafParserTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int BOOL = 4;
	int BREAK = 5;
	int IMPORT = 6;
	int CONTINUE = 7;
	int ELSE = 8;
	int FALSE = 9;
	int FOR = 10;
	int WHILE = 11;
	int IF = 12;
	int INT = 13;
	int RETURN = 14;
	int LEN = 15;
	int TRUE = 16;
	int VOID = 17;
	int LCURLY = 18;
	int RCURLY = 19;
	int RBRACK = 20;
	int LBRACK = 21;
	int LPAREN = 22;
	int RPAREN = 23;
	int COMMA = 24;
	int SEMICOL = 25;
	int LEQ = 26;
	int GEQ = 27;
	int INC = 28;
	int DEC = 29;
	int PEQ = 30;
	int MEQ = 31;
	int AND = 32;
	int OR = 33;
	int EQ = 34;
	int NEQ = 35;
	int MINUS = 36;
	int PLUS = 37;
	int MUL = 38;
	int DIV = 39;
	int MOD = 40;
	int LT = 41;
	int GT = 42;
	int ASSIGN = 43;
	int NOT = 44;
	int ID = 45;
	int WS_ = 46;
	int SL_COMMENT = 47;
	int BLOCK_COMMENT = 48;
	int CHAR_LIT = 49;
	int STRING_LIT = 50;
	int HEX_LIT = 51;
	int DEC_LIT = 52;
	int ESC = 53;
	int ALPHA_NUM = 54;
	int ALPHA = 55;
	int HEX_DIGIT = 56;
	int DIGIT = 57;
	int CHAR = 58;
	int TK_IMPORT = 59;
	int TK_VOID = 60;
	int TK_IF = 61;
	int TK_ELSE = 62;
	int TK_FOR = 63;
	int TK_WHILE = 64;
	int TK_RETURN = 65;
	int TK_BREAK = 66;
	int TK_CONTINUE = 67;
	int TK_LEN = 68;
	int ARITH_OP = 69;
	int REL_OP = 70;
	int EQ_OP = 71;
	int COND_OP = 72;
	int TK_INT = 73;
	int TK_BOOL = 74;
	int TK_TRUE = 75;
	int TK_FALSE = 76;
}
